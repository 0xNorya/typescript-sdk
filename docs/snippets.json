{
  "Edition": {
    "name": "Edition",
    "summary": "Create a collection of NFTs that lets you mint multiple copies of each NFT.\n\n",
    "remarks": null,
    "examples": {
      "javascript": "import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n\n// You can switch out this provider with any wallet or provider setup you like.\nconst provider = ethers.Wallet.createRandom();\nconst sdk = new ThirdwebSDK(provider);\nconst contract = sdk.getEdition(\"{{contract_address}}\");"
    },
    "methods": [
      {
        "name": "mintBatchTo",
        "summary": "Mint Many NFTs with limited supplies\n\n",
        "remarks": "\n\nMint many different NFTs with limited supplies to a specified wallet.\n\n",
        "examples": {
          "javascript": "// Address of the wallet you want to mint the NFT to\nconst toAddress = \"{{wallet_address}}\"\n\n// Custom metadata and supplies of your NFTs\nconst metadataWithSupply = [{\n  supply: 50, // The number of this NFT you want to mint\n  metadata: {\n    name: \"Cool NFT #1\",\n    description: \"This is a cool NFT\",\n    image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n  },\n}, {\n  supply: 100,\n  metadata: {\n    name: \"Cool NFT #2\",\n    description: \"This is a cool NFT\",\n    image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n  },\n}];\n\nconst tx = await contract.mintBatchTo(toAddress, metadataWithSupply);\nconst receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\nconst firstTokenId = tx[0].id; // token id of the first minted NFT\nconst firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT"
        },
        "signature": "mintBatchTo(to: string, metadataWithSupply: [EditionMetadataInput](https://typescript-docs.thirdweb.com/sdk.editionmetadatainput)[]): [Promise](https://typescript-docs.thirdweb.com/sdk.promise)<[TransactionResultWithId](https://typescript-docs.thirdweb.com/sdk.transactionresultwithid)<[EditionMetadata](https://typescript-docs.thirdweb.com/sdk.editionmetadata)>[]>;"
      },
      {
        "name": "mintTo",
        "summary": "Mint an NFT with a limited supply\n\n",
        "remarks": "\n\nMint an NFT with a limited supply to a specified wallet.\n\n",
        "examples": {
          "javascript": "// Address of the wallet you want to mint the NFT to\nconst toAddress = \"{{wallet_address}}\"\n\n// Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\nconst metadata = {\n  name: \"Cool NFT\",\n  description: \"This is a cool NFT\",\n  image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n}\n\nconst metadataWithSupply = {\n  metadata,\n  supply: 1000, // The number of this NFT you want to mint\n}\n\nconst tx = await contract.mintTo(toAddress, metadataWithSupply);\nconst receipt = tx.receipt; // the transaction receipt\nconst tokenId = tx.id; // the id of the NFT minted\nconst nft = await tx.data(); // (optional) fetch details of minted NFT"
        },
        "signature": "mintTo(to: string, metadataWithSupply: [EditionMetadataInput](https://typescript-docs.thirdweb.com/sdk.editionmetadatainput)): [Promise](https://typescript-docs.thirdweb.com/sdk.promise)<[TransactionResultWithId](https://typescript-docs.thirdweb.com/sdk.transactionresultwithid)<[EditionMetadata](https://typescript-docs.thirdweb.com/sdk.editionmetadata)>>;"
      }
    ],
    "properties": [
      {
        "name": "signature",
        "summary": "Signature Minting\n\n",
        "remarks": "\n\nGenerate dynamic NFTs with your own signature, and let others mint them using that signature.\n\n",
        "examples": {
          "javascript": "// see how to craft a payload to sign in the `generateSignature()` documentation\nconst signedPayload = contract.signature.generate(payload);\n\n// now anyone can mint the NFT\nconst tx = contract.signature.mint(signedPayload);\nconst receipt = tx.receipt; // the mint transaction receipt\nconst mintedId = tx.id; // the id of the NFT minted"
        },
        "signature": "signature: [Erc1155SignatureMinting](https://typescript-docs.thirdweb.com/sdk.erc1155signatureminting);"
      }
    ],
    "signature": "export declare class Edition extends [Erc1155](https://typescript-docs.thirdweb.com/sdk.erc1155)<[TokenERC1155](https://typescript-docs.thirdweb.com/sdk.tokenerc1155)> "
  }
}